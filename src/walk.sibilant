
(define Linear-walk Event-emitter

  (init ((list []) (pointer 0))
        (super))

  (def forward (f )
    (incr this.pointer)
    (.emit this "step" [(get this.list this.pointer)
                        this.pointer
                        this.list
                        ]))

  (def back (f )
    (decr this.pointer)
    (.emit this "step" [(get this.list this.pointer)
                        this.pointer
                        this.list])))

(define Matrix Interface

  (init ( (a []) (d 2) ))

  (def-generic get (tuple a d)
    (element tuple a d)))


(define Matrix.Element Pooled

  (init (tuple matrix d))

  (gett index (sumate  this.tuple (=> (r el i a) (mod el i))))

  (gett value (get this.matrix this.index)))

(var element (create Matrix.Element))

(define Agent ()
  (def )
  )

(define Walk Event-emitter
  (init ((state [])))
  ())
