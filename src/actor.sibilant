(namespace actor)
(load "kit-interface/header"
      "./event-emitter"
      "./actor/meta"
      )

(def-lit-macro def-task (name args ...body)
  `(gmth @name @args
         (enque-task this.promise ...@body)))

(import-namespace interface)

(def resolve (v)  (.resolve Promise v))

(def-curried send-to ( actor msg)
  (.send actor msg))

(define Actor Event-emitter

  (init ((promise (resolve)))
        (.call Event-emitter.init this)
        (.on this 'error (=> (e) (assign this.promise (resolve)))))

  (def send (msg)
    (enque-task this.promise
                (.emit this 'message msg))))

(export Actor)
