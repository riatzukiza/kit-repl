(namespace network)

(def-actor Endpoint (socket network)

  (def-generic start (socket network)
    (.on socket 'data
         (=> (value)
             (.emit this 'packet )
             (.emit network 'packet [value this]))))

  (def stop ())

  (def spawn (socket network)
    (remember network.endpoints [socket.remote-address socket.remote-port]

              ((create this) socket network)))

  (def-task send (data socket network)
    (make-promise
     (.write socket data success))))

(export Endpoint)

;; (macro *format-pair-name (addr port) `("" @addr @port))



;; (def-interface Endpoint.Outbound (socket network)

;;   (extend Endpoint)

;;   (def spawn (socket network)
;;     (remember network.endpoints socket.remote-address
;;               ((create this)
;;                socket
;;                network)))

;;   (def-task send (msg socket network)
;;     (make-promise
;;      (.write socket msg success))))
