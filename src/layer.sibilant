(load "kit-interface/header" "./actor")
(import-namespace interface)
(import-namespace actor)

(var curry R.curry)

(def assign-handlers (layer))

(define Layer Actor

  (init ( types (members (.map types (=> (t) ((create t))))))
        (each types (t i) (set this t.symbol (get members i)))
        (.call Actor.init this))

  (gett assign-handlers
        (=> (a i)
            (var members this.members)
            (pipe a
                  (.on 'message (R.pipe
                                 (send-to (get this.members (+ i 1)))))
                  (bubble  this 'error))))
  (def-generic start (members)

    (fluently

     (var last (last members)
          inner (.slice members 0 -1))

     (.for-each inner this.assign-handlers)

     (bubble  last this 'message )))

  (def of (types) (extend this (lit types))))

(def-task Layer.send (d members)
  (.send (first members) d))

