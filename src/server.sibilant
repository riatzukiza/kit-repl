(namespace repl)

(require! 'child_process  'sibilant
          (lit inspect) 'util)




(def-actor Server
    ((network (.spawn Network))
     (reader (.spawn Reader))
     (compiler (.spawn Compiler))
     (evaluator (.spawn Evaluator))
     (printer (.spawn Printer network)))

  (def-generic start (network evaluator reader printer)

    (.on network 'packet (send reader))
    (.on reader 'expression (send compiler))
    (.on compiler 'code (send evaluator))
    (.on evaluator 'result (send printer)))

  (def stop ())
  (def spawn ())
  )

(export Server)

