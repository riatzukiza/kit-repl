(namespace repl)
(include "kit/header")
(import-namespace kit)

(include "./interface/index.sibilant")
(import-namespace interface)
(require! 'readline
          'net)

(def seconds (n) (* n 1000))

(const **port** 8199)
(const **reattempt-interval** (seconds 5))

(var *socket (.connect net **port**)
     options (lit (input process.stdin) (output process.stdout))
     rl (.create-interface readline options))

(.on  rl 'line (#-> ((aprint "request")) *socket.write))
(.on *socket 'data (=> (d) (print "reply" (.to-string d))))

(def reconnect ()
  (set-timeout
   (-> (assign *socket (manage (.connect net **port**))))
   **reattempt-interval**))

(def manage (socket)
  (var attempt-reconnect (-> (print "connection closed,attempting to reconnect") (reconnect socket)))
  (pipe socket
        (.on  'connect (-> (print 'connected)))
        (.on 'close attempt-reconnect)
        (.on 'error (=> (e) (.log console e.message)))))

(export manage)
(manage *socket)
